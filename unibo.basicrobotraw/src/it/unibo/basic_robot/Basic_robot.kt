/* Generated by AN DISI Unibo */ 
package it.unibo.basic_robot

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Basic_robot ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		 var fail_step_when_10  = 0  
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
					}
					 transition(edgeName="t00",targetState="handle_cmd",cond=whenDispatch("cmd"))
					transition(edgeName="t01",targetState="handle_step",cond=whenRequest("step"))
				}	 
				state("handle_cmd") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
					}
					 transition( edgeName="goto",targetState="s0", cond=doswitch() )
				}	 
				state("handle_step") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						 fail_step_when_10 ++  
						if(  fail_step_when_10 <10  
						 ){println("simulo uno step andato bene")
						answer("step", "stepdone", "stepdone(ok)"   )  
						}
						else
						 {println("simulo uno step andato male")
						  fail_step_when_10 = 0 
						 answer("step", "stepfail", "stepfail(rip)"   )  
						 }
					}
					 transition( edgeName="goto",targetState="s0", cond=doswitch() )
				}	 
			}
		}
}
