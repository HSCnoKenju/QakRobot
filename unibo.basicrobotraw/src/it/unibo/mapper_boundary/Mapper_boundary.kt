/* Generated by AN DISI Unibo */ 
package it.unibo.mapper_boundary

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Mapper_boundary ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		 var NumStep = 0  
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("		| mapper started")
					}
					 transition( edgeName="goto",targetState="robotStart", cond=doswitch() )
				}	 
				state("robotStart") { //this:State
					action { //it:State
						
							
							unibo.kotlin.planner22Util.initAI()
							unibo.kotlin.planner22Util.showMap()
							unibo.kotlin.planner22Util.startTimer()
							
							NumStep++
							
							
							unibo.kotlin.planner22Util.showCurrentRobotState()
								
					}
					 transition( edgeName="goto",targetState="doAheadMove", cond=doswitch() )
				}	 
				state("doAheadMove") { //this:State
					action { //it:State
						request("step", "step(100)" ,"basic_robot" )  
					}
					 transition(edgeName="t_done2",targetState="stepDone",cond=whenReply("stepdone"))
					transition(edgeName="t_done3",targetState="stepFailed",cond=whenReply("stepfail"))
				}	 
				state("stepDone") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						
									unibo.kotlin.planner22Util.updateMap(  "w", "stepDone" )
					}
				}	 
				state("stepFailed") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						
								
									println(unibo.kotlin.planner22Util.getMap())
									
						forward("cmd", "cmd(s)" ,"basic_robot" ) 
					}
				}	 
				state("backPosDone") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						
									NumStep++
									unibo.kotlin.planner22Util.updateMap(  "l", "turn" )
						forward("cmd", "cmd(l)" ,"basic_robot" ) 
					}
				}	 
			}
		}
}
